version: 2
jobs:
  build:
    working_directory: /app
    docker:
      - image: docker:latest
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Generate build version (based on current datetime)
          command: |
            echo $(date -u +%Y%m%d%H%M%S) > build_version
      - run:
          name: Build container
          command: |
            docker build -t blackheat/retail-system-swd:build-$(cat build_version) .
      - run:
          name: Save image layer cache
          command: |
            docker save -o retail-system-swd.tar blackheat/retail-system-swd:build-$(cat build_version)
      - run:
          name: Create workspace and artifacts directory
          command: |
            mkdir workspace
            mkdir artifacts
      - run:
          name: Save image and kubernetes configuration to shared workspace
          command: |
            cp retail-system-swd.tar workspace/
            cp ops/kube.conf workspace/
      - run:
          name: Save build version to workspace
          command: |
            cp build_version workspace/
      - persist_to_workspace:
          root: workspace
          paths:
            - build_version
            - retail-system-swd.tar
            - kube.conf
  push_to_registry:
    working_directory: /app
    docker:
      - image: docker:latest
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: /app/workspace
      - run:
          name: Login to GitLab
          command: |
            docker login --username=$DOCKERHUB_USERNAME --password=$DOCKERHUB_PASSWORD
      - run:
          working_directory: workspace
          name: Import built image
          command: |
            docker load --input retail-system-swd.tar
      - run:
          working_directory: workspace
          name: Push container to Dockerhub
          command: |
            docker push blackheat/retail-system-swd:build-$(cat build_version)
      - persist_to_workspace:
          root: workspace
          paths:
            - build_version
            - kube.conf
  deploy:
    working_directory: /app
    docker:
      - image: debian:latest
    steps:
      - run:
          name: Install necessary dependencies
          command: |
            apt-get update
            apt-get install -y openssh-client openssl ca-certificates lsb-release curl gnupg
      - attach_workspace:
          at: /app/workspace
      - run:
          name: Install Kubernetes CLI
          command: |
            # Download kubectl
            curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.17.0/bin/linux/amd64/kubectl
            # Move kubectl binary to /usr/local/bin
            chmod +x kubectl
            mv kubectl /usr/local/bin/
      - run:
          working_directory: workspace
          name: Perform rolling update in Kubernetes
          command: |
            kubectl --kubeconfig=kube.conf -n retail-system-swd set image deployments/retail-system-swd-backend retail-system-swd-backend=blackheat/retail-system-swd:build-$(cat build_version)
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - push_to_registry:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - push_to_registry
          filters:
            branches:
              only: master